name: Build and Deploy Next.js

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache node_modules and .next/cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            .next/cache
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Build Next.js app
        run: |
          export NODE_OPTIONS=--max-old-space-size=3072
          npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nextjs-build
          path: |
            .next
            public
            node_modules
            package.json
            .env.local
            next.config.ts

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: nextjs-build
          path: app

      - name: Copy build to server via rsync
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SSH_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        run: |
          echo "$SSH_KEY" > key.pem
          chmod 600 key.pem
          rsync -avz -e "ssh -i key.pem -o StrictHostKeyChecking=no" app/ ubuntu@$SERVER_IP:/home/ubuntu/nextjs-s3-upload-app

      - name: Restart app on server
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SSH_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        run: |
          echo "$SSH_KEY" > key.pem
          chmod 600 key.pem
          ssh -i key.pem -o StrictHostKeyChecking=no ubuntu@$SERVER_IP <<'EOSSH'
            set -e
            export PATH=$PATH:$(npm bin -g):/usr/local/bin
            cd /home/ubuntu/nextjs-s3-upload-app
            npm install -g pm2 || true
            pm2 kill || true
            pm2 start npm --name nextjs-app -- start
            pm2 status
          EOSSH